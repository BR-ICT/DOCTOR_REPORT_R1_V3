/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DOCTOR_REPORT_R1_V2;

import static DOCTOR_REPORT_R1_V2.LoginMain.LoginCono;
import static DOCTOR_REPORT_R1_V2.LoginMain.LoginDivision;
import static DOCTOR_REPORT_R1_V2.ReportDoctor.year;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Jilasak
 */
public class ReportFarmPra extends javax.swing.JFrame {

    public static int year = 0;

    /**
     * Creates new form ReportTHAIMAX
     */
    public ReportFarmPra() {
        initComponents();
        getDoctorlist();
        jComboBox3.setSelectedIndex(0);
        this.setTitle("Company  " + LoginMain.LoginCompanyName);
        lblCompanyName.setText(LoginMain.LoginCompanyName);

        Locale.setDefault(Locale.US);
        Date d = new Date();

        SimpleDateFormat C = new SimpleDateFormat("yyyy");

        String YYYY = C.format(d);
        year = Integer.parseInt(YYYY) + 543;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        lblCompanyName = new java.awt.Label();
        txt_CO = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Doctor:");

        jComboBox2.setFont(new java.awt.Font("Angsana New", 0, 15)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B01076-นางสาวสุชาดา กาวิเปิบ", "B01077-นางสาวศศิวิมล บุญเพ็ง", "B00390-นางสาวสุกัญญา เพิ่มพิพัฒน์", "A00248-สพ.ญ.รัชนาพร นามกร" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCompanyName.setAlignment(java.awt.Label.CENTER);
        lblCompanyName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCompanyName.setForeground(new java.awt.Color(204, 0, 0));
        lblCompanyName.setText("Company Name");

        txt_CO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_COActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Order");

        jButton1.setText("Set Series");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Print ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 255, 255));
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Print Preprinted");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Doctor:");

        jComboBox3.setFont(new java.awt.Font("Angsana New", 0, 15)); // NOI18N
        jComboBox3.setSelectedItem(0);

        jButton4.setBackground(new java.awt.Color(255, 255, 153));
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Print without Location detail");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCompanyName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txt_CO, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(22, 24, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_CO, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(439, 354));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SetSeries set = new SetSeries();
        set.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ClassGetReport cgr = new ClassGetReport();
        String ss = cgr.GetDoctorRunningNo(txt_CO.getText().trim());
        String CONumber = txt_CO.getText().trim();
        cgr.getReportFarmPra(CONumber, year);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_COActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_COActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_COActionPerformed
//    private void getDoctor() {
//        try {
//            String Sql;
//
//            Connection conn = ConnectDB2.ConnectionDB();
//            Statement sta = conn.createStatement();
////
//
//            Sql = "SELECT * FROM (SELECT NOASSISTANT||'-'||ANAME AS ASSISTANTLIST\n"
//                    + "FROM BRLDTA0100.DOCTORASSISTANT\n"
//                    + "WHERE STATUS = '1') AS A\n"
//                    + "UNION\n"
//                    + "(SELECT TRIM(NODOCTOR) ||'-'||DNAME FROM BRLDTA0100.PRODOCTOREST14 AS ffff\n"
//                    + "WHERE VARCHAR_FORMAT(current timestamp, 'YYYYMMDD') BETWEEN STARTDATE AND ENDDATE)";
//
////          
//            ResultSet rs = sta.executeQuery(Sql);
//
//            while (rs.next()) {
//                jComboBox2.insertItemAt(rs.getString("ASSISTANTLIST").trim(), 0);
//            }
//            rs.close();
//
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, ex.getMessage());
//        }
////                jButton1.setEnabled(true);
//    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ClassGetReport cgr = new ClassGetReport();
        String ss = cgr.GetDoctorRunningNo(txt_CO.getText().trim());
        String CONumber = txt_CO.getText().trim();
        String[] doctorlist = jComboBox3.getSelectedItem().toString().split("-");
        String doctorcode = doctorlist[0];
        String doctorname = doctorlist[1];
        cgr.getReportFarmPraLocation(CONumber, year, doctorname, doctorcode);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        ClassGetReport cgr = new ClassGetReport();
        String ss = cgr.GetDoctorRunningNo(txt_CO.getText().trim());
        String CONumber = txt_CO.getText().trim();
        String[] doctorlist = jComboBox3.getSelectedItem().toString().split("-");
        String doctorcode = doctorlist[0];
            insertDoctorhistory(CONumber, doctorcode, LoginCono, LoginDivision);

        cgr.getReportFarmPraLocationwithnodoctor(CONumber, year);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportFarmPra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportFarmPra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportFarmPra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportFarmPra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportFarmPra().setVisible(true);
            }
        });
    }

    public String[] getAddressTHMAX(String sav_no) {
        String Address = "";
        try {
            Connection mysql = ConnectMsSql.ConnectionDB();
            String sql = "SELECT COALESCE(a.Warehouse,'-') as Warehouse\n"
                    + "from BRLAS400.dbo.T_ThaiMaxSave_no a\n"
                    + "WHERE a.Sav_no = '" + sav_no.trim() + "'";
            Statement sta = mysql.createStatement();
            ResultSet rsl = sta.executeQuery(sql);
            while (rsl.next()) {
                Address = rsl.getString("Warehouse").trim();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReportFarmPra.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] Address_M3 = getAddress_M3(Address);
        return Address_M3;
    }

    private String insertDoctorhistory(String conumber, String doctorcode, String cono, String divi) {
        int howmany = 0;
        try {
            String sqlserver;

            Connection conn = ConnectDB2.ConnectionDB();
            Statement sta = conn.createStatement();
            Statement sta2 = conn.createStatement();
            String Sql2 = "SELECT COUNT(HEADERNO) AS TIMES FROM BRLDTA0100.DOCTORHISTORY\n"
                    + "WHERE HEADERNO = '" + conumber + "'";
            ResultSet rs = sta.executeQuery(Sql2);
//            ResultSet rs = sta.executeQuery(Sql2);
            while (rs.next()) {
                howmany = rs.getInt("TIMES");
            }

            if (howmany == 0) {
                sqlserver = "INSERT INTO BRLDTA0100.DOCTORHISTORY\n"
                        + "(HEADERNO,APPROVER,DCONO,DDIVI)\n"
                        + "values('" + conumber + "','" + doctorcode + "','" + cono + "','" + divi + "')";
            } else {
                sqlserver = "UPDATE BRLDTA0100.DOCTORHISTORY\n"
                        + "SET APPROVER = '" + doctorcode + "'\n"
                        + "WHERE HEADERNO = '" + conumber + "'\n"
                        + "AND DCONO = '" + cono + "'\n"
                        + "AND DDIVI = '" + divi + "'";
            }

            sta2.execute(sqlserver);

//            Connection conn2 = ConnectMsSql.ConnectionDB();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        return null;

    }

    private void getDoctorlist() {

        try {
            String Sql;

            Connection conn = ConnectDB2.ConnectionDB();
            Statement sta = conn.createStatement();
//

            Sql = "SELECT * FROM (SELECT NOASSISTANT||'-'||ANAME AS ASSISTANTLIST\n"
                    + "FROM BRLDTA0100.DOCTORASSISTANT\n"
                    + "WHERE STATUS = '1') AS A\n"
                    + "UNION\n"
                    + "(SELECT TRIM(NODOCTOR) ||'-'||DNAME FROM BRLDTA0100.PRODOCTOREST14 AS ffff\n"
                    + "WHERE VARCHAR_FORMAT(current timestamp, 'YYYYMMDD') BETWEEN STARTDATE AND ENDDATE)";

            ResultSet rs = sta.executeQuery(Sql);

            while (rs.next()) {

                jComboBox3.insertItemAt(rs.getString("ASSISTANTLIST").trim(), 0);

            }
            rs.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

    public String[] getAddress_M3(String whs) {
        String[] M3_Address = new String[4];
        try {
            Connection DB2 = ConnectDB2.ConnectionDB();
            String sql = "SELECT OACONO ,OAADK1 ,OACONM ,OAADR1 ,OAADR2 ,OAADR3, TRIM(OAADR1) || ' ' || TRIM(OAADR2) || ' ' || TRIM(OAADR3) AS Address_M3   \n"
                    + "FROM M3FDBPRD.CIADDR \n"
                    + "WHERE OACONO = '" + LoginMain.LoginCono + "' \n"
                    + "AND OAADK1 = '" + whs.trim() + "'";
            Statement sta = DB2.createStatement();
            ResultSet rsl = sta.executeQuery(sql);
            while (rsl.next()) {
                M3_Address[0] = rsl.getString("OACONM").trim();
                M3_Address[1] = rsl.getString("OAADK1").trim();
                M3_Address[2] = rsl.getString("Address_M3").trim();

            }
        } catch (SQLException ex) {
            Logger.getLogger(ReportFarmPra.class.getName()).log(Level.SEVERE, null, ex);
        }
        return M3_Address;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private java.awt.Label lblCompanyName;
    private javax.swing.JTextField txt_CO;
    // End of variables declaration//GEN-END:variables
}
